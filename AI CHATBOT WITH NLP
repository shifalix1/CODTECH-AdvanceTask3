import spacy
from transformers import pipeline

# Step 1: Load NLP Model
# Using spaCy for tokenization and named entity recognition
nlp = spacy.load("en_core_web_sm")

# Step 2: Define the Chatbot Functionality
class AIChatbot:
    def __init__(self):
        self.qa_pipeline = pipeline("question-answering")
        self.faq_responses = {
            "What is your name?": "I am AI Chatbot, here to assist you!",
            "How can I contact support?": "You can email support@example.com.",
            "What services do you offer?": "I provide answers, guidance, and support for various queries."
        }

    def preprocess_input(self, user_input):
        """Preprocess the user's input using spaCy."""
        doc = nlp(user_input)
        entities = [(ent.text, ent.label_) for ent in doc.ents]
        return doc, entities

    def handle_query(self, user_input):
        """Handle the user's query and provide a response."""
        # First, check FAQ responses
        if user_input in self.faq_responses:
            return self.faq_responses[user_input]

        # For other queries, use a contextual QA pipeline 
        context = (
            "The chatbot is built using advanced NLP techniques. It can answer factual questions, "
            "perform sentiment analysis, and engage in meaningful conversations."
        )
        try:
            answer = self.qa_pipeline(question=user_input, context=context)
            return answer['answer']
        except Exception:
            return "I'm sorry, I couldn't understand your query. Can you rephrase?"

    def chat(self):
        """Run the chatbot in a loop."""
        print("Hello! I am your AI chatbot. Type 'exit' to end the conversation.")
        while True:
            user_input = input("You: ")
            if user_input.lower() == 'exit':
                print("Goodbye! Have a great day!")
                break
            doc, entities = self.preprocess_input(user_input)
            response = self.handle_query(user_input)
            print(f"AI Chatbot: {response}")

# Step 3: Run the Chatbot
if __name__ == "__main__":
    chatbot = AIChatbot()
    chatbot.chat()
